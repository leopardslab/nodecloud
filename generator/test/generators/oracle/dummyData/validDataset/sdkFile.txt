import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { LoadBalancerWaiter } from "./loadbalancer-waiter";
export declare enum LoadBalancerApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class LoadBalancerClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": LoadBalancerWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpOptions: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new LoadBalancerWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): LoadBalancerWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): LoadBalancerWaiter;
    /**
     * Moves a load balancer into a different compartment within the same tenancy. For information about moving resources
     * between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeLoadBalancerCompartmentRequest
     * @return ChangeLoadBalancerCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ChangeLoadBalancerCompartment.ts.html |here} to see how to use ChangeLoadBalancerCompartment API.
     */
    changeLoadBalancerCompartment(changeLoadBalancerCompartmentRequest: requests.ChangeLoadBalancerCompartmentRequest): Promise<responses.ChangeLoadBalancerCompartmentResponse>;
    /**
     * Adds a backend server to a backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateBackendRequest
     * @return CreateBackendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateBackend.ts.html |here} to see how to use CreateBackend API.
     */
    createBackend(createBackendRequest: requests.CreateBackendRequest): Promise<responses.CreateBackendResponse>;
    /**
     * Adds a backend set to a load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateBackendSetRequest
     * @return CreateBackendSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateBackendSet.ts.html |here} to see how to use CreateBackendSet API.
     */
    createBackendSet(createBackendSetRequest: requests.CreateBackendSetRequest): Promise<responses.CreateBackendSetResponse>;
    /**
     * Creates an asynchronous request to add an SSL certificate bundle.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCertificateRequest
     * @return CreateCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateCertificate.ts.html |here} to see how to use CreateCertificate API.
     */
    createCertificate(createCertificateRequest: requests.CreateCertificateRequest): Promise<responses.CreateCertificateResponse>;
    /**
     * Adds a hostname resource to the specified load balancer. For more information, see
     * [Managing Request Routing](https://docs.cloud.oracle.com/Content/Balance/Tasks/managingrequest.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateHostnameRequest
     * @return CreateHostnameResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateHostname.ts.html |here} to see how to use CreateHostname API.
     */
    createHostname(createHostnameRequest: requests.CreateHostnameRequest): Promise<responses.CreateHostnameResponse>;
    /**
     * Adds a listener to a load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateListenerRequest
     * @return CreateListenerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateListener.ts.html |here} to see how to use CreateListener API.
     */
    createListener(createListenerRequest: requests.CreateListenerRequest): Promise<responses.CreateListenerResponse>;
    /**
       * Creates a new load balancer in the specified compartment. For general information about load balancers,
  * see [Overview of the Load Balancing Service](https://docs.cloud.oracle.com/Content/Balance/Concepts/balanceoverview.htm).
  * <p>
  For the purposes of access control, you must provide the OCID of the compartment where you want
  * the load balancer to reside. Notice that the load balancer doesn't have to be in the same compartment as the VCN
  * or backend set. If you're not sure which compartment to use, put the load balancer in the same compartment as the VCN.
  * For information about access control and compartments, see
  * [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).
  * <p>
  You must specify a display name for the load balancer. It does not have to be unique, and you can change it.
  * <p>
  For information about Availability Domains, see
  * [Regions and Availability Domains](https://docs.cloud.oracle.com/Content/General/Concepts/regions.htm).
  * To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
  * in the Identity and Access Management Service API.
  * <p>
  All Oracle Cloud Infrastructure resources, including load balancers, get an Oracle-assigned,
  * unique ID called an Oracle Cloud Identifier (OCID). When you create a resource, you can find its OCID
  * in the response. You can also retrieve a resource's OCID by using a List API operation on that resource type,
  * or by viewing the resource in the Console. Fore more information, see
  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
  * <p>
  After you send your request, the new object's state will temporarily be PROVISIONING. Before using the
  * object, first make sure its state has changed to RUNNING.
  * <p>
  When you create a load balancer, the system assigns an IP address.
  * To get the IP address, use the {@link #getLoadBalancer(GetLoadBalancerRequest) getLoadBalancer} operation.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param CreateLoadBalancerRequest
       * @return CreateLoadBalancerResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateLoadBalancer.ts.html |here} to see how to use CreateLoadBalancer API.
       */
    createLoadBalancer(createLoadBalancerRequest: requests.CreateLoadBalancerRequest): Promise<responses.CreateLoadBalancerResponse>;
    /**
     * Adds a path route set to a load balancer. For more information, see
     * [Managing Request Routing](https://docs.cloud.oracle.com/Content/Balance/Tasks/managingrequest.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreatePathRouteSetRequest
     * @return CreatePathRouteSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreatePathRouteSet.ts.html |here} to see how to use CreatePathRouteSet API.
     */
    createPathRouteSet(createPathRouteSetRequest: requests.CreatePathRouteSetRequest): Promise<responses.CreatePathRouteSetResponse>;
    /**
     * Adds a routing policy to a load balancer. For more information, see
     * [Managing Request Routing](https://docs.cloud.oracle.com/Content/Balance/Tasks/managingrequest.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateRoutingPolicyRequest
     * @return CreateRoutingPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateRoutingPolicy.ts.html |here} to see how to use CreateRoutingPolicy API.
     */
    createRoutingPolicy(createRoutingPolicyRequest: requests.CreateRoutingPolicyRequest): Promise<responses.CreateRoutingPolicyResponse>;
    /**
     * Creates a new rule set associated with the specified load balancer. For more information, see
     * [Managing Rule Sets](https://docs.cloud.oracle.com/Content/Balance/Tasks/managingrulesets.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateRuleSetRequest
     * @return CreateRuleSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateRuleSet.ts.html |here} to see how to use CreateRuleSet API.
     */
    createRuleSet(createRuleSetRequest: requests.CreateRuleSetRequest): Promise<responses.CreateRuleSetResponse>;
    /**
     * Creates a custom SSL cipher suite.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSSLCipherSuiteRequest
     * @return CreateSSLCipherSuiteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/CreateSSLCipherSuite.ts.html |here} to see how to use CreateSSLCipherSuite API.
     */
    createSSLCipherSuite(createSSLCipherSuiteRequest: requests.CreateSSLCipherSuiteRequest): Promise<responses.CreateSSLCipherSuiteResponse>;
    /**
     * Removes a backend server from a given load balancer and backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteBackendRequest
     * @return DeleteBackendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteBackend.ts.html |here} to see how to use DeleteBackend API.
     */
    deleteBackend(deleteBackendRequest: requests.DeleteBackendRequest): Promise<responses.DeleteBackendResponse>;
    /**
       * Deletes the specified backend set. Note that deleting a backend set removes its backend servers from the load balancer.
  * <p>
  Before you can delete a backend set, you must remove it from any active listeners.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DeleteBackendSetRequest
       * @return DeleteBackendSetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteBackendSet.ts.html |here} to see how to use DeleteBackendSet API.
       */
    deleteBackendSet(deleteBackendSetRequest: requests.DeleteBackendSetRequest): Promise<responses.DeleteBackendSetResponse>;
    /**
     * Deletes an SSL certificate bundle from a load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCertificateRequest
     * @return DeleteCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteCertificate.ts.html |here} to see how to use DeleteCertificate API.
     */
    deleteCertificate(deleteCertificateRequest: requests.DeleteCertificateRequest): Promise<responses.DeleteCertificateResponse>;
    /**
     * Deletes a hostname resource from the specified load balancer.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteHostnameRequest
     * @return DeleteHostnameResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteHostname.ts.html |here} to see how to use DeleteHostname API.
     */
    deleteHostname(deleteHostnameRequest: requests.DeleteHostnameRequest): Promise<responses.DeleteHostnameResponse>;
    /**
     * Deletes a listener from a load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteListenerRequest
     * @return DeleteListenerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteListener.ts.html |here} to see how to use DeleteListener API.
     */
    deleteListener(deleteListenerRequest: requests.DeleteListenerRequest): Promise<responses.DeleteListenerResponse>;
    /**
     * Stops a load balancer and removes it from service.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteLoadBalancerRequest
     * @return DeleteLoadBalancerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteLoadBalancer.ts.html |here} to see how to use DeleteLoadBalancer API.
     */
    deleteLoadBalancer(deleteLoadBalancerRequest: requests.DeleteLoadBalancerRequest): Promise<responses.DeleteLoadBalancerResponse>;
    /**
       * Deletes a path route set from the specified load balancer.
  * <p>
  To delete a path route rule from a path route set, use the
  * {@link #updatePathRouteSet(UpdatePathRouteSetRequest) updatePathRouteSet} operation.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DeletePathRouteSetRequest
       * @return DeletePathRouteSetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeletePathRouteSet.ts.html |here} to see how to use DeletePathRouteSet API.
       */
    deletePathRouteSet(deletePathRouteSetRequest: requests.DeletePathRouteSetRequest): Promise<responses.DeletePathRouteSetResponse>;
    /**
       * Deletes a routing policy from the specified load balancer.
  * <p>
  To delete a routing rule from a routing policy, use the
  * {@link #updateRoutingPolicy(UpdateRoutingPolicyRequest) updateRoutingPolicy} operation.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DeleteRoutingPolicyRequest
       * @return DeleteRoutingPolicyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteRoutingPolicy.ts.html |here} to see how to use DeleteRoutingPolicy API.
       */
    deleteRoutingPolicy(deleteRoutingPolicyRequest: requests.DeleteRoutingPolicyRequest): Promise<responses.DeleteRoutingPolicyResponse>;
    /**
       * Deletes a rule set from the specified load balancer.
  * <p>
  To delete a rule from a rule set, use the
  * {@link #updateRuleSet(UpdateRuleSetRequest) updateRuleSet} operation.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DeleteRuleSetRequest
       * @return DeleteRuleSetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteRuleSet.ts.html |here} to see how to use DeleteRuleSet API.
       */
    deleteRuleSet(deleteRuleSetRequest: requests.DeleteRuleSetRequest): Promise<responses.DeleteRuleSetResponse>;
    /**
     * Deletes an SSL cipher suite from a load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSSLCipherSuiteRequest
     * @return DeleteSSLCipherSuiteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/DeleteSSLCipherSuite.ts.html |here} to see how to use DeleteSSLCipherSuite API.
     */
    deleteSSLCipherSuite(deleteSSLCipherSuiteRequest: requests.DeleteSSLCipherSuiteRequest): Promise<responses.DeleteSSLCipherSuiteResponse>;
    /**
     * Gets the specified backend server's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetBackendRequest
     * @return GetBackendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetBackend.ts.html |here} to see how to use GetBackend API.
     */
    getBackend(getBackendRequest: requests.GetBackendRequest): Promise<responses.GetBackendResponse>;
    /**
     * Gets the current health status of the specified backend server.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetBackendHealthRequest
     * @return GetBackendHealthResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetBackendHealth.ts.html |here} to see how to use GetBackendHealth API.
     */
    getBackendHealth(getBackendHealthRequest: requests.GetBackendHealthRequest): Promise<responses.GetBackendHealthResponse>;
    /**
     * Gets the specified backend set's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetBackendSetRequest
     * @return GetBackendSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetBackendSet.ts.html |here} to see how to use GetBackendSet API.
     */
    getBackendSet(getBackendSetRequest: requests.GetBackendSetRequest): Promise<responses.GetBackendSetResponse>;
    /**
     * Gets the health status for the specified backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetBackendSetHealthRequest
     * @return GetBackendSetHealthResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetBackendSetHealth.ts.html |here} to see how to use GetBackendSetHealth API.
     */
    getBackendSetHealth(getBackendSetHealthRequest: requests.GetBackendSetHealthRequest): Promise<responses.GetBackendSetHealthResponse>;
    /**
     * Gets the health check policy information for a given load balancer and backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetHealthCheckerRequest
     * @return GetHealthCheckerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetHealthChecker.ts.html |here} to see how to use GetHealthChecker API.
     */
    getHealthChecker(getHealthCheckerRequest: requests.GetHealthCheckerRequest): Promise<responses.GetHealthCheckerResponse>;
    /**
     * Gets the specified hostname resource's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetHostnameRequest
     * @return GetHostnameResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetHostname.ts.html |here} to see how to use GetHostname API.
     */
    getHostname(getHostnameRequest: requests.GetHostnameRequest): Promise<responses.GetHostnameResponse>;
    /**
     * Gets the specified load balancer's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetLoadBalancerRequest
     * @return GetLoadBalancerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetLoadBalancer.ts.html |here} to see how to use GetLoadBalancer API.
     */
    getLoadBalancer(getLoadBalancerRequest: requests.GetLoadBalancerRequest): Promise<responses.GetLoadBalancerResponse>;
    /**
     * Gets the health status for the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetLoadBalancerHealthRequest
     * @return GetLoadBalancerHealthResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetLoadBalancerHealth.ts.html |here} to see how to use GetLoadBalancerHealth API.
     */
    getLoadBalancerHealth(getLoadBalancerHealthRequest: requests.GetLoadBalancerHealthRequest): Promise<responses.GetLoadBalancerHealthResponse>;
    /**
     * Gets the specified path route set's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPathRouteSetRequest
     * @return GetPathRouteSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetPathRouteSet.ts.html |here} to see how to use GetPathRouteSet API.
     */
    getPathRouteSet(getPathRouteSetRequest: requests.GetPathRouteSetRequest): Promise<responses.GetPathRouteSetResponse>;
    /**
     * Gets the specified routing policy.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetRoutingPolicyRequest
     * @return GetRoutingPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetRoutingPolicy.ts.html |here} to see how to use GetRoutingPolicy API.
     */
    getRoutingPolicy(getRoutingPolicyRequest: requests.GetRoutingPolicyRequest): Promise<responses.GetRoutingPolicyResponse>;
    /**
     * Gets the specified set of rules.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetRuleSetRequest
     * @return GetRuleSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetRuleSet.ts.html |here} to see how to use GetRuleSet API.
     */
    getRuleSet(getRuleSetRequest: requests.GetRuleSetRequest): Promise<responses.GetRuleSetResponse>;
    /**
     * Gets the specified SSL cipher suite's configuration information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSSLCipherSuiteRequest
     * @return GetSSLCipherSuiteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetSSLCipherSuite.ts.html |here} to see how to use GetSSLCipherSuite API.
     */
    getSSLCipherSuite(getSSLCipherSuiteRequest: requests.GetSSLCipherSuiteRequest): Promise<responses.GetSSLCipherSuiteResponse>;
    /**
     * Gets the details of a work request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists all backend sets associated with a given load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListBackendSetsRequest
     * @return ListBackendSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListBackendSets.ts.html |here} to see how to use ListBackendSets API.
     */
    listBackendSets(listBackendSetsRequest: requests.ListBackendSetsRequest): Promise<responses.ListBackendSetsResponse>;
    /**
     * Lists the backend servers for a given load balancer and backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListBackendsRequest
     * @return ListBackendsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListBackends.ts.html |here} to see how to use ListBackends API.
     */
    listBackends(listBackendsRequest: requests.ListBackendsRequest): Promise<responses.ListBackendsResponse>;
    /**
     * Lists all SSL certificates bundles associated with a given load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCertificatesRequest
     * @return ListCertificatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListCertificates.ts.html |here} to see how to use ListCertificates API.
     */
    listCertificates(listCertificatesRequest: requests.ListCertificatesRequest): Promise<responses.ListCertificatesResponse>;
    /**
     * Lists all hostname resources associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListHostnamesRequest
     * @return ListHostnamesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListHostnames.ts.html |here} to see how to use ListHostnames API.
     */
    listHostnames(listHostnamesRequest: requests.ListHostnamesRequest): Promise<responses.ListHostnamesResponse>;
    /**
     * Lists all of the rules from all of the rule sets associated with the specified listener. The response organizes
     * the rules in the following order:
     * <p>
     *  Access control rules
     * *  Allow method rules
     * *  Request header rules
     * *  Response header rules
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListListenerRulesRequest
     * @return ListListenerRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListListenerRules.ts.html |here} to see how to use ListListenerRules API.
     */
    listListenerRules(listListenerRulesRequest: requests.ListListenerRulesRequest): Promise<responses.ListListenerRulesResponse>;
    /**
     * Lists the summary health statuses for all load balancers in the specified compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListLoadBalancerHealthsRequest
     * @return ListLoadBalancerHealthsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListLoadBalancerHealths.ts.html |here} to see how to use ListLoadBalancerHealths API.
     */
    listLoadBalancerHealths(listLoadBalancerHealthsRequest: requests.ListLoadBalancerHealthsRequest): Promise<responses.ListLoadBalancerHealthsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listLoadBalancerHealthsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LoadBalancerHealthSummary objects
     * contained in responses from the listLoadBalancerHealths operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLoadBalancerHealths(request: requests.ListLoadBalancerHealthsRequest): AsyncIterableIterator<model.LoadBalancerHealthSummary>;
    /**
     * NOTE: This function is deprecated in favor of listLoadBalancerHealthsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listLoadBalancerHealths operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLoadBalancerHealthsResponses(request: requests.ListLoadBalancerHealthsRequest): AsyncIterableIterator<responses.ListLoadBalancerHealthsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LoadBalancerHealthSummary objects
     * contained in responses from the listLoadBalancerHealths operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLoadBalancerHealthsRecordIterator(request: requests.ListLoadBalancerHealthsRequest): AsyncIterableIterator<model.LoadBalancerHealthSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLoadBalancerHealths operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLoadBalancerHealthsResponseIterator(request: requests.ListLoadBalancerHealthsRequest): AsyncIterableIterator<responses.ListLoadBalancerHealthsResponse>;
    /**
     * Lists all load balancers in the specified compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListLoadBalancersRequest
     * @return ListLoadBalancersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListLoadBalancers.ts.html |here} to see how to use ListLoadBalancers API.
     */
    listLoadBalancers(listLoadBalancersRequest: requests.ListLoadBalancersRequest): Promise<responses.ListLoadBalancersResponse>;
    /**
     * NOTE: This function is deprecated in favor of listLoadBalancersRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LoadBalancer objects
     * contained in responses from the listLoadBalancers operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLoadBalancers(request: requests.ListLoadBalancersRequest): AsyncIterableIterator<model.LoadBalancer>;
    /**
     * NOTE: This function is deprecated in favor of listLoadBalancersResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listLoadBalancers operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLoadBalancersResponses(request: requests.ListLoadBalancersRequest): AsyncIterableIterator<responses.ListLoadBalancersResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LoadBalancer objects
     * contained in responses from the listLoadBalancers operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLoadBalancersRecordIterator(request: requests.ListLoadBalancersRequest): AsyncIterableIterator<model.LoadBalancer>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLoadBalancers operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLoadBalancersResponseIterator(request: requests.ListLoadBalancersRequest): AsyncIterableIterator<responses.ListLoadBalancersResponse>;
    /**
     * Lists all path route sets associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPathRouteSetsRequest
     * @return ListPathRouteSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListPathRouteSets.ts.html |here} to see how to use ListPathRouteSets API.
     */
    listPathRouteSets(listPathRouteSetsRequest: requests.ListPathRouteSetsRequest): Promise<responses.ListPathRouteSetsResponse>;
    /**
     * Lists the available load balancer policies.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPoliciesRequest
     * @return ListPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListPolicies.ts.html |here} to see how to use ListPolicies API.
     */
    listPolicies(listPoliciesRequest: requests.ListPoliciesRequest): Promise<responses.ListPoliciesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPoliciesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LoadBalancerPolicy objects
     * contained in responses from the listPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPolicies(request: requests.ListPoliciesRequest): AsyncIterableIterator<model.LoadBalancerPolicy>;
    /**
     * NOTE: This function is deprecated in favor of listPoliciesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPoliciesResponses(request: requests.ListPoliciesRequest): AsyncIterableIterator<responses.ListPoliciesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LoadBalancerPolicy objects
     * contained in responses from the listPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPoliciesRecordIterator(request: requests.ListPoliciesRequest): AsyncIterableIterator<model.LoadBalancerPolicy>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPoliciesResponseIterator(request: requests.ListPoliciesRequest): AsyncIterableIterator<responses.ListPoliciesResponse>;
    /**
     * Lists all supported traffic protocols.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProtocolsRequest
     * @return ListProtocolsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListProtocols.ts.html |here} to see how to use ListProtocols API.
     */
    listProtocols(listProtocolsRequest: requests.ListProtocolsRequest): Promise<responses.ListProtocolsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listProtocolsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LoadBalancerProtocol objects
     * contained in responses from the listProtocols operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllProtocols(request: requests.ListProtocolsRequest): AsyncIterableIterator<model.LoadBalancerProtocol>;
    /**
     * NOTE: This function is deprecated in favor of listProtocolsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listProtocols operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllProtocolsResponses(request: requests.ListProtocolsRequest): AsyncIterableIterator<responses.ListProtocolsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LoadBalancerProtocol objects
     * contained in responses from the listProtocols operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listProtocolsRecordIterator(request: requests.ListProtocolsRequest): AsyncIterableIterator<model.LoadBalancerProtocol>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listProtocols operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listProtocolsResponseIterator(request: requests.ListProtocolsRequest): AsyncIterableIterator<responses.ListProtocolsResponse>;
    /**
     * Lists all routing policies associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListRoutingPoliciesRequest
     * @return ListRoutingPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListRoutingPolicies.ts.html |here} to see how to use ListRoutingPolicies API.
     */
    listRoutingPolicies(listRoutingPoliciesRequest: requests.ListRoutingPoliciesRequest): Promise<responses.ListRoutingPoliciesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listRoutingPoliciesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.RoutingPolicy objects
     * contained in responses from the listRoutingPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRoutingPolicies(request: requests.ListRoutingPoliciesRequest): AsyncIterableIterator<model.RoutingPolicy>;
    /**
     * NOTE: This function is deprecated in favor of listRoutingPoliciesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listRoutingPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRoutingPoliciesResponses(request: requests.ListRoutingPoliciesRequest): AsyncIterableIterator<responses.ListRoutingPoliciesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.RoutingPolicy objects
     * contained in responses from the listRoutingPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listRoutingPoliciesRecordIterator(request: requests.ListRoutingPoliciesRequest): AsyncIterableIterator<model.RoutingPolicy>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listRoutingPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listRoutingPoliciesResponseIterator(request: requests.ListRoutingPoliciesRequest): AsyncIterableIterator<responses.ListRoutingPoliciesResponse>;
    /**
     * Lists all rule sets associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListRuleSetsRequest
     * @return ListRuleSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListRuleSets.ts.html |here} to see how to use ListRuleSets API.
     */
    listRuleSets(listRuleSetsRequest: requests.ListRuleSetsRequest): Promise<responses.ListRuleSetsResponse>;
    /**
     * Lists all SSL cipher suites associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSSLCipherSuitesRequest
     * @return ListSSLCipherSuitesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListSSLCipherSuites.ts.html |here} to see how to use ListSSLCipherSuites API.
     */
    listSSLCipherSuites(listSSLCipherSuitesRequest: requests.ListSSLCipherSuitesRequest): Promise<responses.ListSSLCipherSuitesResponse>;
    /**
     * Lists the valid load balancer shapes.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListShapesRequest
     * @return ListShapesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListShapes.ts.html |here} to see how to use ListShapes API.
     */
    listShapes(listShapesRequest: requests.ListShapesRequest): Promise<responses.ListShapesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listShapesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LoadBalancerShape objects
     * contained in responses from the listShapes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllShapes(request: requests.ListShapesRequest): AsyncIterableIterator<model.LoadBalancerShape>;
    /**
     * NOTE: This function is deprecated in favor of listShapesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listShapes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllShapesResponses(request: requests.ListShapesRequest): AsyncIterableIterator<responses.ListShapesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LoadBalancerShape objects
     * contained in responses from the listShapes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listShapesRecordIterator(request: requests.ListShapesRequest): AsyncIterableIterator<model.LoadBalancerShape>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listShapes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listShapesResponseIterator(request: requests.ListShapesRequest): AsyncIterableIterator<responses.ListShapesResponse>;
    /**
     * Lists the work requests for a given load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequest objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequest>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequest objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequest>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Updates the configuration of a backend server within the specified backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateBackendRequest
     * @return UpdateBackendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateBackend.ts.html |here} to see how to use UpdateBackend API.
     */
    updateBackend(updateBackendRequest: requests.UpdateBackendRequest): Promise<responses.UpdateBackendResponse>;
    /**
     * Updates a backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateBackendSetRequest
     * @return UpdateBackendSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateBackendSet.ts.html |here} to see how to use UpdateBackendSet API.
     */
    updateBackendSet(updateBackendSetRequest: requests.UpdateBackendSetRequest): Promise<responses.UpdateBackendSetResponse>;
    /**
     * Updates the health check policy for a given load balancer and backend set.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateHealthCheckerRequest
     * @return UpdateHealthCheckerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateHealthChecker.ts.html |here} to see how to use UpdateHealthChecker API.
     */
    updateHealthChecker(updateHealthCheckerRequest: requests.UpdateHealthCheckerRequest): Promise<responses.UpdateHealthCheckerResponse>;
    /**
     * Overwrites an existing hostname resource on the specified load balancer. Use this operation to change a
     * virtual hostname.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateHostnameRequest
     * @return UpdateHostnameResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateHostname.ts.html |here} to see how to use UpdateHostname API.
     */
    updateHostname(updateHostnameRequest: requests.UpdateHostnameRequest): Promise<responses.UpdateHostnameResponse>;
    /**
     * Updates a listener for a given load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateListenerRequest
     * @return UpdateListenerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateListener.ts.html |here} to see how to use UpdateListener API.
     */
    updateListener(updateListenerRequest: requests.UpdateListenerRequest): Promise<responses.UpdateListenerResponse>;
    /**
     * Updates a load balancer's configuration.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateLoadBalancerRequest
     * @return UpdateLoadBalancerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateLoadBalancer.ts.html |here} to see how to use UpdateLoadBalancer API.
     */
    updateLoadBalancer(updateLoadBalancerRequest: requests.UpdateLoadBalancerRequest): Promise<responses.UpdateLoadBalancerResponse>;
    /**
     * Update the shape of a load balancer. The new shape can be larger or smaller compared to existing shape of the
     * LB. The service will try to perform this operation in the least disruptive way to existing connections, but
     * there is a possibility that they might be lost during the LB resizing process. The new shape becomes effective
     * as soon as the related work request completes successfully, i.e. when reshaping to a larger shape, the LB will
     * start accepting larger bandwidth and when reshaping to a smaller one, the LB will be accepting smaller
     * bandwidth.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateLoadBalancerShapeRequest
     * @return UpdateLoadBalancerShapeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateLoadBalancerShape.ts.html |here} to see how to use UpdateLoadBalancerShape API.
     */
    updateLoadBalancerShape(updateLoadBalancerShapeRequest: requests.UpdateLoadBalancerShapeRequest): Promise<responses.UpdateLoadBalancerShapeResponse>;
    /**
     * Updates the network security groups associated with the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateNetworkSecurityGroupsRequest
     * @return UpdateNetworkSecurityGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateNetworkSecurityGroups.ts.html |here} to see how to use UpdateNetworkSecurityGroups API.
     */
    updateNetworkSecurityGroups(updateNetworkSecurityGroupsRequest: requests.UpdateNetworkSecurityGroupsRequest): Promise<responses.UpdateNetworkSecurityGroupsResponse>;
    /**
       * Overwrites an existing path route set on the specified load balancer. Use this operation to add, delete, or alter
  * path route rules in a path route set.
  * <p>
  To add a new path route rule to a path route set, the `pathRoutes` in the
  * {@link #updatePathRouteSetDetails(UpdatePathRouteSetDetailsRequest) updatePathRouteSetDetails} object must include
  * both the new path route rule to add and the existing path route rules to retain.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdatePathRouteSetRequest
       * @return UpdatePathRouteSetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdatePathRouteSet.ts.html |here} to see how to use UpdatePathRouteSet API.
       */
    updatePathRouteSet(updatePathRouteSetRequest: requests.UpdatePathRouteSetRequest): Promise<responses.UpdatePathRouteSetResponse>;
    /**
       * Overwrites an existing routing policy on the specified load balancer. Use this operation to add, delete, or alter
  * routing policy rules in a routing policy.
  * <p>
  To add a new routing rule to a routing policy, the body must include both the new routing rule to add and the existing rules to retain.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateRoutingPolicyRequest
       * @return UpdateRoutingPolicyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateRoutingPolicy.ts.html |here} to see how to use UpdateRoutingPolicy API.
       */
    updateRoutingPolicy(updateRoutingPolicyRequest: requests.UpdateRoutingPolicyRequest): Promise<responses.UpdateRoutingPolicyResponse>;
    /**
       * Overwrites an existing set of rules on the specified load balancer. Use this operation to add or alter
  * the rules in a rule set.
  * <p>
  To add a new rule to a set, the body must include both the new rule to add and the existing rules to retain.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateRuleSetRequest
       * @return UpdateRuleSetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateRuleSet.ts.html |here} to see how to use UpdateRuleSet API.
       */
    updateRuleSet(updateRuleSetRequest: requests.UpdateRuleSetRequest): Promise<responses.UpdateRuleSetResponse>;
    /**
     * Updates an existing SSL cipher suite for the specified load balancer.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateSSLCipherSuiteRequest
     * @return UpdateSSLCipherSuiteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.66.0/loadbalancer/UpdateSSLCipherSuite.ts.html |here} to see how to use UpdateSSLCipherSuite API.
     */
    updateSSLCipherSuite(updateSSLCipherSuiteRequest: requests.UpdateSSLCipherSuiteRequest): Promise<responses.UpdateSSLCipherSuiteResponse>;
}
